#spring cloud stream
spring.cloud.stream.function.routing.enabled=true
spring.cloud.function.definition=sendCorrelateMessage;functionRouter;sendStartProcess;
spring.cloud.stream.bindings.functionRouter-in-0.destination=${io.muenchendigital.digiwf.zms.topic}
spring.cloud.stream.bindings.functionRouter-in-0.group=${io.muenchendigital.digiwf.zms.group}
spring.cloud.stream.bindings.sendCorrelateMessage-out-0.destination=${io.muenchendigital.digiwf.zms.engineTopic}
spring.cloud.stream.bindings.sendStartProcess-out-0.destination=${io.muenchendigital.digiwf.zms.engineTopic}
#kafka config
spring.cloud.stream.kafka.binder.consumerProperties.key.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.binder.consumerProperties.value.deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.binder.producerProperties.key.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.cloud.stream.kafka.binder.producerProperties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
##DLQ Config -> only possible if group for functionRouter is set
#spring.cloud.stream.default.consumer.maxAttempts=1
#spring.cloud.stream.kafka.default.consumer.dlqName=
#spring.cloud.stream.kafka.default.consumer.enableDlq=true